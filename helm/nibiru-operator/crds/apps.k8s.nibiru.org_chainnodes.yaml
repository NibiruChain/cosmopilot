---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: chainnodes.apps.k8s.nibiru.org
spec:
  group: apps.k8s.nibiru.org
  names:
    kind: ChainNode
    listKind: ChainNodeList
    plural: chainnodes
    singular: chainnode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.ip
      name: IP
      type: string
    - jsonPath: .status.appVersion
      name: Version
      type: string
    - jsonPath: .status.chainID
      name: ChainID
      type: string
    - jsonPath: .status.validator
      name: Validator
      type: boolean
    - jsonPath: .status.validatorStatus
      name: BondStatus
      type: string
    - jsonPath: .status.jailed
      name: Jailed
      type: boolean
    - jsonPath: .status.dataUsage
      name: DataUsage
      type: string
    - jsonPath: .status.latestHeight
      name: LatestHeight
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ChainNode is the Schema for the chainnodes API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ChainNodeSpec defines the desired state of ChainNode.
            properties:
              affinity:
                description: If specified, the pod's scheduling constraints.
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node matches
                          the corresponding matchExpressions; the node(s) with the
                          highest sum are the most preferred.
                        items:
                          description: An empty preferred scheduling term matches
                            all objects with implicit weight 0 (i.e. it's a no-op).
                            A null preferred scheduling term matches no objects (i.e.
                            is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to an update), the system may or may not try to
                          eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: A null or empty node selector term matches
                                no objects. The requirements of them are ANDed. The
                                TopologySelectorTerm type implements a subset of the
                                NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: A node selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists, DoesNotExist. Gt, and
                                          Lt.
                                        type: string
                                      values:
                                        description: An array of string values. If
                                          the operator is In or NotIn, the values
                                          array must be non-empty. If the operator
                                          is Exists or DoesNotExist, the values array
                                          must be empty. If the operator is Gt or
                                          Lt, the values array must have a single
                                          element, which will be interpreted as an
                                          integer. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the affinity expressions specified by
                          this field, but it may choose a node that violates one or
                          more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this
                          field are not met at scheduling time, the pod will not be
                          scheduled onto the node. If the affinity requirements specified
                          by this field cease to be met at some point during pod execution
                          (e.g. due to a pod label update), the system may or may
                          not try to eventually evict the pod from its node. When
                          there are multiple elements, the lists of nodes corresponding
                          to each podAffinityTerm are intersected, i.e. all terms
                          must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to
                          nodes that satisfy the anti-affinity expressions specified
                          by this field, but it may choose a node that violates one
                          or more of the expressions. The node that is most preferred
                          is the one with the greatest sum of weights, i.e. for each
                          node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions,
                          etc.), compute a sum by iterating through the elements of
                          this field and adding "weight" to the sum if the node has
                          pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: weight associated with matching the corresponding
                                podAffinityTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the anti-affinity requirements specified by
                          this field are not met at scheduling time, the pod will
                          not be scheduled onto the node. If the anti-affinity requirements
                          specified by this field cease to be met at some point during
                          pod execution (e.g. due to a pod label update), the system
                          may or may not try to eventually evict the pod from its
                          node. When there are multiple elements, the lists of nodes
                          corresponding to each podAffinityTerm are intersected, i.e.
                          all terms must be satisfied.
                        items:
                          description: Defines a set of pods (namely those matching
                            the labelSelector relative to the given namespace(s))
                            that this pod should be co-located (affinity) or not co-located
                            (anti-affinity) with, where co-located is defined as running
                            on a node whose value of the label with key <topologyKey>
                            matches that of any node on which a pod of the set of
                            pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: A label query over the set of namespaces
                                that the term applies to. The term is applied to the
                                union of the namespaces selected by this field and
                                the ones listed in the namespaces field. null selector
                                and null or empty namespaces list means "this pod's
                                namespace". An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: namespaces specifies a static list of namespace
                                names that the term applies to. The term is applied
                                to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector. null or
                                empty namespaces list and null namespaceSelector means
                                "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: This pod should be co-located (affinity)
                                or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where
                                co-located is defined as running on a node whose value
                                of the label with key topologyKey matches that of
                                any node on which any of the selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              app:
                description: Specifies image, version and binary name of the chain
                  application to run. It also allows to schedule upgrades, or setting/updating
                  the image for an on-chain upgrade.
                properties:
                  app:
                    description: Binary name of the application to be run.
                    minLength: 1
                    type: string
                  checkGovUpgrades:
                    description: Whether the operator should query gov proposals to
                      find and schedule upgrades. Defaults to `true`.
                    type: boolean
                  image:
                    description: Container image to be used.
                    minLength: 1
                    type: string
                  imagePullPolicy:
                    description: Indicates the desired pull policy when creating nodes.
                      Defaults to `Always` if `version` is `latest` and `IfNotPresent`
                      otherwise.
                    type: string
                  sdkVersion:
                    description: 'SdkVersion specifies the version of cosmos-sdk used
                      by this app. Valid options are: - "v0.47" (default) - "v0.45"'
                    enum:
                    - v0.45
                    - v0.47
                    type: string
                  upgrades:
                    description: List of upgrades to schedule for this node.
                    items:
                      description: UpgradeSpec represents a manual upgrade.
                      properties:
                        height:
                          description: Height at which the upgrade should occur.
                          format: int64
                          type: integer
                        image:
                          description: Container image replacement to be used in the
                            upgrade.
                          type: string
                      required:
                      - height
                      - image
                      type: object
                    type: array
                  version:
                    description: Image tag to be used. Once there are completed or
                      skipped upgrades this will be ignored. For a new node that will
                      be state-synced, this will be the version used during state-sync.
                      Only after that, the operator will switch to the version of
                      last upgrade. Defaults to `latest`.
                    type: string
                required:
                - app
                - image
                type: object
              autoDiscoverPeers:
                description: Ensures peers with same chain ID are connected with each
                  other. Enabled by default.
                type: boolean
              config:
                description: Allows setting specific configurations for this node.
                properties:
                  blockThreshold:
                    description: The time to wait for a block before considering node
                      unhealthy. Defaults to `15s`.
                    format: duration
                    type: string
                  env:
                    description: List of environment variables to set in the app container.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  firewall:
                    description: Deploys cosmos-firewall to protect API endpoints
                      to the node.
                    properties:
                      config:
                        description: ConfigMap which cosmos-firewall configuration
                          for this node.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      enable:
                        description: Whether to enable cosmos-firewall on this node.
                        type: boolean
                    required:
                    - config
                    - enable
                    type: object
                  imagePullSecrets:
                    description: Optional list of references to secrets in the same
                      namespace to use for pulling any of the images used by this
                      node.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  nodeUtilsLogLevel:
                    description: Log level for node-utils container. Defaults to `info`.
                    type: string
                  override:
                    description: Allows overriding configs on `.toml` configuration
                      files.
                    x-kubernetes-preserve-unknown-fields: true
                  reconcilePeriod:
                    description: Period at which a reconcile loop will happen for
                      this ChainNode. Defaults to `15s`.
                    format: duration
                    type: string
                  safeToEvict:
                    description: SafeToEvict sets cluster-autoscaler.kubernetes.io/safe-to-evict
                      annotation to the given value. It allows/disallows cluster-autoscaler
                      to evict this node's pod.
                    type: boolean
                  seedMode:
                    description: Configures this node to run on seed mode. Defaults
                      to `false`.
                    type: boolean
                  serviceMonitor:
                    description: ServiceMonitor allows deploying prometheus service
                      monitor for this node.
                    properties:
                      enable:
                        description: Whether a service monitor should be deployed
                          for this node.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: Indicates the prometheus installation that will
                          be using this service monitor.
                        type: object
                    required:
                    - enable
                    type: object
                  sidecars:
                    description: Allows configuring additional containers to run alongside
                      the node.
                    items:
                      description: SidecarSpec allows configuring additional containers
                        to run alongside the node.
                      properties:
                        args:
                          description: Args to be passed to this container. Defaults
                            to cmd defined in image.
                          items:
                            type: string
                          type: array
                        command:
                          description: Command to be run by this container. Defaults
                            to entrypoint defined in image.
                          items:
                            type: string
                          type: array
                        env:
                          description: Environment variables to be passed to this
                            container.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        image:
                          description: Container image to be used.
                          minLength: 1
                          type: string
                        imagePullPolicy:
                          description: Indicates the desired pull policy when creating
                            nodes. Defaults to `Always` if `version` is `latest` and
                            `IfNotPresent` otherwise.
                          type: string
                        mountDataVolume:
                          description: Where data volume will be mounted on this container.
                            It is not mounted if not specified.
                          type: string
                        name:
                          description: Name to be assigned to the container.
                          minLength: 1
                          type: string
                        resources:
                          description: Compute Resources for the sidecar container.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        securityContext:
                          description: Security options the container should be run
                            with.
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must only be set if type is "Localhost".
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. This
                                    field is alpha-level and will only be honored
                                    by components that enable the WindowsHostProcessContainers
                                    feature flag. Setting this field without the feature
                                    flag will result in errors when validating the
                                    Pod. All of a Pod's containers must have the same
                                    effective HostProcess value (it is not allowed
                                    to have a mix of HostProcess containers and non-HostProcess
                                    containers).  In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                      required:
                      - image
                      - name
                      type: object
                    type: array
                  startupTime:
                    description: The time after which a node will be restarted if
                      it does not start properly. Defaults to `1h`.
                    format: duration
                    type: string
                  stateSync:
                    description: Allows configuring this node to perform state-sync
                      snapshots.
                    properties:
                      snapshotInterval:
                        description: Block interval at which local state sync snapshots
                          are taken (0 to disable).
                        type: integer
                      snapshotKeepRecent:
                        description: Number of recent snapshots to keep and serve
                          (0 to keep all). Defaults to 2.
                        type: integer
                    required:
                    - snapshotInterval
                    type: object
                type: object
              expose:
                description: Allows exposing P2P traffic to public.
                properties:
                  p2p:
                    description: Whether to expose p2p endpoint for this node. Defaults
                      to `false`.
                    type: boolean
                  p2pServiceType:
                    description: 'P2pServiceType indicates how P2P port will be exposed.
                      Valid values are: - `LoadBalancer` - `NodePort` (default)'
                    type: string
                type: object
              genesis:
                description: Indicates where this node will get the genesis from.
                  Can be omitted when .spec.validator.init is specified.
                properties:
                  configMap:
                    description: ConfigMap specifies a configmap to load the genesis
                      from.
                    type: string
                  fromNodeRPC:
                    description: Get the genesis from an existing node using its RPC
                      endpoint.
                    properties:
                      hostname:
                        description: Hostname or IP address of the RPC server
                        minLength: 1
                        type: string
                      port:
                        description: TCP port used for RPC queries on the RPC server.
                          Defaults to `26657`.
                        type: integer
                      secure:
                        description: Defines protocol to use. Defaults to `false`.
                        type: boolean
                    required:
                    - hostname
                    type: object
                  genesisSHA:
                    description: SHA256 to validate the genesis.
                    type: string
                  url:
                    description: URL to download the genesis from.
                    type: string
                  useDataVolume:
                    description: UseDataVolume indicates that the operator should
                      save the genesis in the same volume as node data instead of
                      a ConfigMap. This is useful for genesis whose size is bigger
                      than ConfigMap limit of 1MiB.
                    type: boolean
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: Selector which must be true for the pod to fit on a node.
                  Selector which must match a node's labels for the pod to be scheduled
                  on that node.
                type: object
              peers:
                description: Additional persistent peers that should be added to this
                  node.
                items:
                  description: Peer represents a persistent peer.
                  properties:
                    address:
                      description: Hostname or IP address of this peer.
                      type: string
                    id:
                      description: Tendermint node ID for this node.
                      type: string
                    port:
                      description: P2P port to be used. Defaults to `26656`.
                      type: integer
                    private:
                      description: Indicates this peer is private.
                      type: boolean
                    unconditional:
                      description: Indicates this peer is unconditional.
                      type: boolean
                  required:
                  - address
                  - id
                  type: object
                type: array
              persistence:
                description: Configures PVC for persisting data. Automated data snapshots
                  can also be configured in this section.
                properties:
                  additionalInitCommands:
                    description: Additional commands to run on data initialization.
                      Useful for downloading and extracting snapshots. App home is
                      at `/home/app` and data dir is at `/home/app/data`. There is
                      also `/temp`, a temporary volume shared by all init containers.
                    items:
                      description: InitCommand represents an initialization command.
                        It may be used for running addtional operators on genesis
                        or volume initialization.
                      properties:
                        args:
                          description: Args to be passed to this command.
                          items:
                            type: string
                          type: array
                        command:
                          description: Command to be used. Defaults to image entrypoint.
                          items:
                            type: string
                          type: array
                        image:
                          description: Image to be used to run this command. Defaults
                            to app image.
                          type: string
                      required:
                      - args
                      type: object
                    type: array
                  autoResize:
                    description: Automatically resize PVC. Defaults to `true`.
                    type: boolean
                  autoResizeIncrement:
                    description: Increment size on each auto-resize event. Defaults
                      to `50Gi`.
                    type: string
                  autoResizeMaxSize:
                    description: Size at which auto-resize will stop incrementing
                      PVC size. Defaults to `2Ti`.
                    type: string
                  autoResizeThreshold:
                    description: Percentage of data usage at which an auto-resize
                      event should occur. Defaults to `80`.
                    type: integer
                  restoreFromSnapshot:
                    description: Restore from the specified snapshot when creating
                      the PVC for this node.
                    properties:
                      apiGroup:
                        description: Group for the resource being referenced. Defaults
                          to `snapshot.storage.k8s.io`.
                        type: string
                      kind:
                        description: Type of resource being referenced. Defaults to
                          `VolumeSnapshot`.
                        type: string
                      name:
                        description: Name of resource being referenced.
                        type: string
                    required:
                    - name
                    type: object
                  size:
                    description: Size of the persistent volume for storing data. Can't
                      be updated when autoResize is enabled. Defaults to `50Gi`.
                    type: string
                  snapshots:
                    description: Whether the operator should create volume snapshots
                      according to this config.
                    properties:
                      exportTarball:
                        description: Whether to create a tarball of data directory
                          in each snapshot and upload it to external storage.
                        properties:
                          deleteOnExpire:
                            description: Whether to delete the tarball when the snapshot
                              expires. Default is `false`.
                            type: boolean
                          gcs:
                            description: Configuration to upload tarballs to a GCS
                              bucket.
                            properties:
                              bucket:
                                description: Name of the bucket to upload tarballs
                                  to.
                                type: string
                              credentialsSecret:
                                description: Secret with the JSON credentials to upload
                                  to bucket.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - bucket
                            - credentialsSecret
                            type: object
                          suffix:
                            description: Suffix to add to archive name. The name of
                              the tarball will be `<chain-id>-<timestamp>-<suffix>`.
                            type: string
                        type: object
                      frequency:
                        description: How often a snapshot should be created.
                        format: duration
                        type: string
                      retention:
                        description: How long a snapshot should be retained. Default
                          is indefinite retention.
                        format: duration
                        type: string
                      snapshotClass:
                        description: Name of the volume snapshot class to be used.
                          Uses the default class if not specified.
                        type: string
                      stopNode:
                        description: Whether the node should be stopped while the
                          snapshot is taken. Defaults to `false`.
                        type: boolean
                      verify:
                        description: Whether the operator should verify the snapshot
                          for corruption after it is ready. Defaults to `false`.
                        type: boolean
                    required:
                    - frequency
                    type: object
                  storageClass:
                    description: Name of the storage class to use for the PVC. Uses
                      the default class if not specified. to create persistent volumes.
                    type: string
                type: object
              resources:
                description: Compute Resources required by the app container.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              stateSyncRestore:
                description: Configures this node to find a state-sync snapshot on
                  the network and restore from it. This is disabled by default.
                type: boolean
              validator:
                description: Indicates this node is going to be a validator and allows
                  configuring it.
                properties:
                  createValidator:
                    description: Indicates that operator should run create-validator
                      tx to make this node a validator.
                    properties:
                      accountHDPath:
                        description: HD path of accounts. Defaults to `m/44'/118'/0'/0/0`.
                        type: string
                      accountMnemonicSecret:
                        description: Name of the secret containing the mnemonic of
                          the account to be used by this validator. Defaults to `<chainnode>-account`.
                          Will be created if it does not exist.
                        type: string
                      accountPrefix:
                        description: Prefix for accounts. Defaults to `nibi`.
                        type: string
                      commissionMaxChangeRate:
                        description: Maximum commission change rate percentage (per
                          day). Defaults to `0.1`.
                        type: string
                      commissionMaxRate:
                        description: Maximum commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      commissionRate:
                        description: Initial commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      gasPrices:
                        description: Gas prices in decimal format to determine the
                          transaction fee.
                        type: string
                      minSelfDelegation:
                        description: Minimum self delegation required on the validator.
                          Defaults to `1`.
                        type: string
                      stakeAmount:
                        description: Amount to be staked by this validator.
                        type: string
                      valPrefix:
                        description: Prefix for validator operator accounts. Defaults
                          to `nibivaloper`.
                        type: string
                    required:
                    - gasPrices
                    - stakeAmount
                    type: object
                  info:
                    description: Contains information details about this validator.
                    properties:
                      details:
                        description: Details of this validator.
                        type: string
                      identity:
                        description: Identity signature of this validator.
                        type: string
                      moniker:
                        description: Moniker to be used by this validator. Defaults
                          to the ChainNode name.
                        type: string
                      website:
                        description: Website of the validator.
                        type: string
                    type: object
                  init:
                    description: Specifies configs and initialization commands for
                      creating a new genesis.
                    properties:
                      accountHDPath:
                        description: HD path of accounts. Defaults to `m/44'/118'/0'/0/0`.
                        type: string
                      accountMnemonicSecret:
                        description: Name of the secret containing the mnemonic of
                          the account to be used by this validator. Defaults to `<chainnode>-account`.
                          Will be created if it does not exist.
                        type: string
                      accountPrefix:
                        description: Prefix for accounts. Defaults to `nibi`.
                        type: string
                      accounts:
                        description: Accounts specify additional accounts and respective
                          assets to be added to this chain.
                        items:
                          description: AccountAssets represents the assets associated
                            with an account.
                          properties:
                            address:
                              description: Address of the account.
                              type: string
                            assets:
                              description: Assets assigned to this account.
                              items:
                                type: string
                              type: array
                          required:
                          - address
                          - assets
                          type: object
                        type: array
                      additionalInitCommands:
                        description: 'Additional commands to run on genesis initialization.
                          Note: App home is at `/home/app` and `/temp` is a temporary
                          volume shared by all init containers.'
                        items:
                          description: InitCommand represents an initialization command.
                            It may be used for running addtional operators on genesis
                            or volume initialization.
                          properties:
                            args:
                              description: Args to be passed to this command.
                              items:
                                type: string
                              type: array
                            command:
                              description: Command to be used. Defaults to image entrypoint.
                              items:
                                type: string
                              type: array
                            image:
                              description: Image to be used to run this command. Defaults
                                to app image.
                              type: string
                          required:
                          - args
                          type: object
                        type: array
                      assets:
                        description: Assets is the list of tokens and their amounts
                          to be assigned to this validators account.
                        items:
                          type: string
                        type: array
                      chainID:
                        description: ChainID of the chain to initialize.
                        minLength: 1
                        type: string
                      commissionMaxChangeRate:
                        description: Maximum commission change rate percentage (per
                          day). Defaults to `0.1`.
                        type: string
                      commissionMaxRate:
                        description: Maximum commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      commissionRate:
                        description: Initial commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      minSelfDelegation:
                        description: Minimum self delegation required on the validator.
                          Defaults to `1`.
                        type: string
                      stakeAmount:
                        description: Amount to be staked by this validator.
                        type: string
                      unbondingTime:
                        description: Time required to totally unbond delegations.
                          Defaults to `1814400s` (21 days).
                        format: duration
                        type: string
                      valPrefix:
                        description: Prefix for validator operator accounts. Defaults
                          to `nibivaloper`.
                        type: string
                      votingPeriod:
                        description: Voting period for this chain. Defaults to `120h`.
                        format: duration
                        type: string
                    required:
                    - assets
                    - chainID
                    - stakeAmount
                    type: object
                  privateKeySecret:
                    description: Indicates the secret containing the private key to
                      be used by this validator. Defaults to `<chainnode>-priv-key`.
                      Will be created if it does not exist.
                    type: string
                  tmKMS:
                    description: TmKMS configuration for signing commits for this
                      validator. When configured, .spec.validator.privateKeySecret
                      will not be mounted on the validator node.
                    properties:
                      keyFormat:
                        description: 'Format and type of key for chain. Defaults to
                          `{"type": "bech32", "account_key_prefix": "nibipub", "consensus_key_prefix":
                          "nibivalconspub"}`.'
                        properties:
                          account_key_prefix:
                            description: Account keys prefixes
                            type: string
                          consensus_key_prefix:
                            description: Consensus keys prefix
                            type: string
                          type:
                            description: Key type
                            type: string
                        required:
                        - account_key_prefix
                        - consensus_key_prefix
                        - type
                        type: object
                      provider:
                        description: Signing provider to be used by tmkms. Currently
                          only `vault` is supported.
                        properties:
                          vault:
                            description: Vault provider.
                            properties:
                              address:
                                description: Full address of the Vault cluster.
                                type: string
                              autoRenewToken:
                                description: Whether to automatically renew vault
                                  token. Defaults to `false`.
                                type: boolean
                              certificateSecret:
                                description: Secret containing the CA certificate
                                  of the Vault cluster.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              key:
                                description: Key to be used by this validator.
                                type: string
                              tokenSecret:
                                description: Secret containing the token to be used.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              uploadGenerated:
                                description: UploadGenerated indicates if the controller
                                  should upload the generated private key to vault.
                                  Defaults to `false`. Will be set to `true` if this
                                  validator is initializing a new genesis. This should
                                  not be used in production.
                                type: boolean
                            required:
                            - address
                            - key
                            - tokenSecret
                            type: object
                        type: object
                      validatorProtocol:
                        description: 'Tendermint''s protocol version to be used. Valid
                          options are: - `v0.34` (default) - `v0.33` - `legacy`'
                        type: string
                    required:
                    - provider
                    type: object
                type: object
            required:
            - app
            type: object
          status:
            description: ChainNodeStatus defines the observed state of ChainNode
            properties:
              accountAddress:
                description: Account address of this validator. Omitted when not a
                  validator.
                type: string
              appVersion:
                description: Application version currently deployed.
                type: string
              chainID:
                description: Indicates the chain ID.
                type: string
              dataUsage:
                description: Usage percentage of data volume.
                type: string
              ip:
                description: Internal IP address of this node.
                type: string
              jailed:
                description: Indicates if this validator is jailed. Always false if
                  not a validator node.
                type: boolean
              latestHeight:
                description: Last height read on the node by the operator.
                format: int64
                type: integer
              nodeID:
                description: Indicates this node's ID.
                type: string
              phase:
                description: Indicates the current phase for this ChainNode.
                type: string
              pubKey:
                description: Public key of the validator.
                type: string
              publicAddress:
                description: Public address for P2P when enabled.
                type: string
              pvcSize:
                description: Current size of the data PVC for this node.
                type: string
              seedMode:
                description: Indicates if this node is running with seed mode enabled.
                type: boolean
              upgrades:
                description: All scheduled/completed upgrades performed by the operator
                  on this ChainNode.
                items:
                  description: Upgrade represents an upgrade processed by the operator
                    and added to status.
                  properties:
                    height:
                      description: Height at which the upgrade should occur.
                      format: int64
                      type: integer
                    image:
                      description: Container image replacement to be used in the upgrade.
                      type: string
                    source:
                      description: Where the operator got this upgrade from.
                      type: string
                    status:
                      description: Upgrade status.
                      type: string
                  required:
                  - height
                  - image
                  - source
                  - status
                  type: object
                type: array
              validator:
                description: Indicates if this node is a validator.
                type: boolean
              validatorAddress:
                description: Validator address is the valoper address of this validator.
                  Omitted when not a validator.
                type: string
              validatorStatus:
                description: Indicates the current status of validator if this node
                  is one.
                type: string
            required:
            - validator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
