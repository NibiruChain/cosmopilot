//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountAssets) DeepCopyInto(out *AccountAssets) {
	*out = *in
	if in.Assets != nil {
		in, out := &in.Assets, &out.Assets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountAssets.
func (in *AccountAssets) DeepCopy() *AccountAssets {
	if in == nil {
		return nil
	}
	out := new(AccountAssets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNode) DeepCopyInto(out *ChainNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNode.
func (in *ChainNode) DeepCopy() *ChainNode {
	if in == nil {
		return nil
	}
	out := new(ChainNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChainNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeList) DeepCopyInto(out *ChainNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChainNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeList.
func (in *ChainNodeList) DeepCopy() *ChainNodeList {
	if in == nil {
		return nil
	}
	out := new(ChainNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChainNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeSet) DeepCopyInto(out *ChainNodeSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeSet.
func (in *ChainNodeSet) DeepCopy() *ChainNodeSet {
	if in == nil {
		return nil
	}
	out := new(ChainNodeSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChainNodeSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeSetList) DeepCopyInto(out *ChainNodeSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChainNodeSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeSetList.
func (in *ChainNodeSetList) DeepCopy() *ChainNodeSetList {
	if in == nil {
		return nil
	}
	out := new(ChainNodeSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChainNodeSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeSetSpec) DeepCopyInto(out *ChainNodeSetSpec) {
	*out = *in
	in.App.DeepCopyInto(&out.App)
	if in.Genesis != nil {
		in, out := &in.Genesis, &out.Genesis
		*out = new(GenesisConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Validator != nil {
		in, out := &in.Validator, &out.Validator
		*out = new(NodeSetValidatorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodeGroupSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeSetSpec.
func (in *ChainNodeSetSpec) DeepCopy() *ChainNodeSetSpec {
	if in == nil {
		return nil
	}
	out := new(ChainNodeSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeSetStatus) DeepCopyInto(out *ChainNodeSetStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeSetStatus.
func (in *ChainNodeSetStatus) DeepCopy() *ChainNodeSetStatus {
	if in == nil {
		return nil
	}
	out := new(ChainNodeSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeSpec) DeepCopyInto(out *ChainNodeSpec) {
	*out = *in
	if in.Genesis != nil {
		in, out := &in.Genesis, &out.Genesis
		*out = new(GenesisConfig)
		(*in).DeepCopyInto(*out)
	}
	in.App.DeepCopyInto(&out.App)
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(Config)
		(*in).DeepCopyInto(*out)
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(Persistence)
		(*in).DeepCopyInto(*out)
	}
	if in.Validator != nil {
		in, out := &in.Validator, &out.Validator
		*out = new(ValidatorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AutoDiscoverPeers != nil {
		in, out := &in.AutoDiscoverPeers, &out.AutoDiscoverPeers
		*out = new(bool)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]Peer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expose != nil {
		in, out := &in.Expose, &out.Expose
		*out = new(ExposeConfig)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeSpec.
func (in *ChainNodeSpec) DeepCopy() *ChainNodeSpec {
	if in == nil {
		return nil
	}
	out := new(ChainNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChainNodeStatus) DeepCopyInto(out *ChainNodeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChainNodeStatus.
func (in *ChainNodeStatus) DeepCopy() *ChainNodeStatus {
	if in == nil {
		return nil
	}
	out := new(ChainNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(map[string]runtime.RawExtension)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]runtime.RawExtension, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
	if in.Sidecars != nil {
		in, out := &in.Sidecars, &out.Sidecars
		*out = make([]SidecarSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]corev1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.BlockThreshold != nil {
		in, out := &in.BlockThreshold, &out.BlockThreshold
		*out = new(string)
		**out = **in
	}
	if in.ReconcilePeriod != nil {
		in, out := &in.ReconcilePeriod, &out.ReconcilePeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExposeConfig) DeepCopyInto(out *ExposeConfig) {
	*out = *in
	if in.P2P != nil {
		in, out := &in.P2P, &out.P2P
		*out = new(bool)
		**out = **in
	}
	if in.P2pServiceType != nil {
		in, out := &in.P2pServiceType, &out.P2pServiceType
		*out = new(corev1.ServiceType)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExposeConfig.
func (in *ExposeConfig) DeepCopy() *ExposeConfig {
	if in == nil {
		return nil
	}
	out := new(ExposeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenesisConfig) DeepCopyInto(out *GenesisConfig) {
	*out = *in
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenesisConfig.
func (in *GenesisConfig) DeepCopy() *GenesisConfig {
	if in == nil {
		return nil
	}
	out := new(GenesisConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenesisInitConfig) DeepCopyInto(out *GenesisInitConfig) {
	*out = *in
	if in.AccountMnemonicSecret != nil {
		in, out := &in.AccountMnemonicSecret, &out.AccountMnemonicSecret
		*out = new(string)
		**out = **in
	}
	if in.AccountHDPath != nil {
		in, out := &in.AccountHDPath, &out.AccountHDPath
		*out = new(string)
		**out = **in
	}
	if in.AccountPrefix != nil {
		in, out := &in.AccountPrefix, &out.AccountPrefix
		*out = new(string)
		**out = **in
	}
	if in.ValPrefix != nil {
		in, out := &in.ValPrefix, &out.ValPrefix
		*out = new(string)
		**out = **in
	}
	if in.Assets != nil {
		in, out := &in.Assets, &out.Assets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Accounts != nil {
		in, out := &in.Accounts, &out.Accounts
		*out = make([]AccountAssets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnbondingTime != nil {
		in, out := &in.UnbondingTime, &out.UnbondingTime
		*out = new(string)
		**out = **in
	}
	if in.VotingPeriod != nil {
		in, out := &in.VotingPeriod, &out.VotingPeriod
		*out = new(string)
		**out = **in
	}
	if in.AdditionalInitCommands != nil {
		in, out := &in.AdditionalInitCommands, &out.AdditionalInitCommands
		*out = make([]InitCommand, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenesisInitConfig.
func (in *GenesisInitConfig) DeepCopy() *GenesisInitConfig {
	if in == nil {
		return nil
	}
	out := new(GenesisInitConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressConfig) DeepCopyInto(out *IngressConfig) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressConfig.
func (in *IngressConfig) DeepCopy() *IngressConfig {
	if in == nil {
		return nil
	}
	out := new(IngressConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitCommand) DeepCopyInto(out *InitCommand) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitCommand.
func (in *InitCommand) DeepCopy() *InitCommand {
	if in == nil {
		return nil
	}
	out := new(InitCommand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupSpec) DeepCopyInto(out *NodeGroupSpec) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = new(int)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(Config)
		(*in).DeepCopyInto(*out)
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(Persistence)
		(*in).DeepCopyInto(*out)
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]Peer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expose != nil {
		in, out := &in.Expose, &out.Expose
		*out = new(ExposeConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressConfig)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupSpec.
func (in *NodeGroupSpec) DeepCopy() *NodeGroupSpec {
	if in == nil {
		return nil
	}
	out := new(NodeGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeSetValidatorConfig) DeepCopyInto(out *NodeSetValidatorConfig) {
	*out = *in
	if in.PrivateKeySecret != nil {
		in, out := &in.PrivateKeySecret, &out.PrivateKeySecret
		*out = new(string)
		**out = **in
	}
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = new(ValidatorInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Init != nil {
		in, out := &in.Init, &out.Init
		*out = new(GenesisInitConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(Config)
		(*in).DeepCopyInto(*out)
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(Persistence)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeSetValidatorConfig.
func (in *NodeSetValidatorConfig) DeepCopy() *NodeSetValidatorConfig {
	if in == nil {
		return nil
	}
	out := new(NodeSetValidatorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Peer) DeepCopyInto(out *Peer) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.Unconditional != nil {
		in, out := &in.Unconditional, &out.Unconditional
		*out = new(bool)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Peer.
func (in *Peer) DeepCopy() *Peer {
	if in == nil {
		return nil
	}
	out := new(Peer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Persistence) DeepCopyInto(out *Persistence) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.AutoResize != nil {
		in, out := &in.AutoResize, &out.AutoResize
		*out = new(bool)
		**out = **in
	}
	if in.AutoResizeThreshold != nil {
		in, out := &in.AutoResizeThreshold, &out.AutoResizeThreshold
		*out = new(int)
		**out = **in
	}
	if in.AutoResizeIncrement != nil {
		in, out := &in.AutoResizeIncrement, &out.AutoResizeIncrement
		*out = new(string)
		**out = **in
	}
	if in.AutoResizeMaxSize != nil {
		in, out := &in.AutoResizeMaxSize, &out.AutoResizeMaxSize
		*out = new(string)
		**out = **in
	}
	if in.AdditionalInitCommands != nil {
		in, out := &in.AdditionalInitCommands, &out.AdditionalInitCommands
		*out = make([]InitCommand, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Persistence.
func (in *Persistence) DeepCopy() *Persistence {
	if in == nil {
		return nil
	}
	out := new(Persistence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarSpec) DeepCopyInto(out *SidecarSpec) {
	*out = *in
	if in.MountDataVolume != nil {
		in, out := &in.MountDataVolume, &out.MountDataVolume
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarSpec.
func (in *SidecarSpec) DeepCopy() *SidecarSpec {
	if in == nil {
		return nil
	}
	out := new(SidecarSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidatorConfig) DeepCopyInto(out *ValidatorConfig) {
	*out = *in
	if in.PrivateKeySecret != nil {
		in, out := &in.PrivateKeySecret, &out.PrivateKeySecret
		*out = new(string)
		**out = **in
	}
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = new(ValidatorInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.Init != nil {
		in, out := &in.Init, &out.Init
		*out = new(GenesisInitConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidatorConfig.
func (in *ValidatorConfig) DeepCopy() *ValidatorConfig {
	if in == nil {
		return nil
	}
	out := new(ValidatorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidatorInfo) DeepCopyInto(out *ValidatorInfo) {
	*out = *in
	if in.Moniker != nil {
		in, out := &in.Moniker, &out.Moniker
		*out = new(string)
		**out = **in
	}
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = new(string)
		**out = **in
	}
	if in.Website != nil {
		in, out := &in.Website, &out.Website
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidatorInfo.
func (in *ValidatorInfo) DeepCopy() *ValidatorInfo {
	if in == nil {
		return nil
	}
	out := new(ValidatorInfo)
	in.DeepCopyInto(out)
	return out
}
