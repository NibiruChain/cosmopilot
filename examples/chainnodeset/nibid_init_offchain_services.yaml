apiVersion: apps.k8s.nibiru.org/v1
kind: ChainNodeSet
metadata:
  name: nibiru-testnet
spec:
  app:
    image: ghcr.io/nibiruchain/nibiru
    version: 0.21.0
    app: nibid

  validator:
    info:
      moniker: nibiru
      website: https://nibiru.fi
    config:
      override:
        app.toml:
          minimum-gas-prices: 0.025unibi
        config.toml:
          consensus:
            timeout_commit: 1s
      sidecars:
        - name: pricefeeder
          image: ghcr.io/nibiruchain/pricefeeder:0.21.0
          env:
            - name: FEEDER_MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: nibiru-testnet-validator-account
                  key: mnemonic
            - name: CHAIN_ID
              value: nibiru-devnet-0
            - name: GRPC_ENDPOINT
              value: localhost:9090
            - name: WEBSOCKET_ENDPOINT
              value: ws://localhost:26657/websocket
            - name: EXCHANGE_SYMBOLS_MAP
              value: '{"bitfinex":{"ubtc:unusd":"tBTCUSD","ueth:unusd":"tETHUSD","uusdc:unusd":"tUDCUSD"},"binance":{"ubtc:uusd":"BTCUSD","ueth:uusd":"ETHUSD","uusdt:uusd":"USDTUSD","uusdc:uusd":"USDCUSD","uatom:uusd":"ATOMUSD","ubnb:uusd":"BNBUSD","uavax:uusd":"AVAXUSD","usol:uusd":"SOLUSD","uada:uusd":"ADAUSD","ubtc:unusd":"BTCUSD","ueth:unusd":"ETHUSD","uusdt:unusd":"USDTUSD","uusdc:unusd":"USDCUSD","uatom:unusd":"ATOMUSD","ubnb:unusd":"BNBUSD","uavax:unusd":"AVAXUSD","usol:unusd":"SOLUSD","uada:unusd":"ADAUSD"}}'

    init:
      chainID: nibiru-devnet-0
      assets: [ "1000000000000000unibi" ]
      stakeAmount: 100000000unibi
      unbondingTime: 86400s
      votingPeriod: 7200s
      additionalInitCommands:
        - image: ghcr.io/nibiruchain/node-tools
          command: [ "sh" , "-c" ]
          args:
            - >
              curl -s "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum&vs_currencies=usd" -o /temp/coingecko.json;
              jq '.bitcoin.usd' /temp/coingecko.json > /temp/bitcoin;
              jq '.ethereum.usd' /temp/coingecko.json > /temp/ethereum;
              jq '.app_state.oracle.params.min_voters = "1"' /home/app/config/genesis.json | sponge /home/app/config/genesis.json;

        - command: [ "sh" , "-c" ]
          args:
            - >
              nibid add-genesis-perp-market
              --pair=ubtc:unusd
              --sqrt-depth=40000000000000
              --price-multiplier=$(cat /temp/bitcoin)
              --max-leverage=10
              --mmr=0.05
              --home=/home/app

        - command: [ "sh" , "-c" ]
          args:
            - >
              nibid add-genesis-perp-market
              --pair=ueth:unusd
              --sqrt-depth=40000000000000
              --price-multiplier=$(cat /temp/ethereum)
              --max-leverage=15
              --mmr=0.05
              --home=/home/app

  nodes:
    - name: fullnodes
      instances: 1

      config:
        override:
          app.toml:
            minimum-gas-prices: 0.025unibi
            pruning: custom
            pruning-keep-recent: "100"
            pruning-interval: "10"

      ingress:
        host: devnet-k8s.play.nibiru.fi
        enableRPC: true
        enableGRPC: true
        enableLCD: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-origin: "*"
          nginx.ingress.kubernetes.io/server-snippet: |2
            proxy_cache static-cache;
            proxy_cache_valid any 3s;
            proxy_cache_methods GET HEAD;
            proxy_cache_lock on;
            proxy_cache_lock_age 1m;
            proxy_cache_lock_timeout 1m;
            proxy_cache_use_stale error timeout updating http_502 http_503 http_504;
            proxy_cache_background_update on;
            add_header X-Cache-Status $upstream_cache_status;
            proxy_cache_bypass $http_upgrade;
            location ~* "^/block_search" {
              deny all;
              return 403;
            }

    - name: hm-nodes
      config:
        override:
          app.toml:
            minimum-gas-prices: 0.025unibi
            pruning: custom
            pruning-keep-recent: "100"
            pruning-interval: "10"

        imagePullSecrets:
          - name: ghcr

        sidecars:
          - name: go-heartmonitor
            image: ghcr.io/nibiruchain/go-heartmonitor:latest
            imagePullPolicy: Always
            mountDataVolume: /home/app/data
            env:
              - name: DATABASE_URI
                value: postgresql://postgres:ikevmGEWaa@postgres-postgresql:5432/heart_monitor?sslmode=disable
              - name: CHAIN_DB_PATH
                value: /home/app/data
              - name: TENDERMINT_RPC_ENDPOINT
                value: http://localhost:26657
              - name: NO_PARTITIONS
                value: "true"
